name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  release:
    needs: build  # Runs only after build job succeeds
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      
      - name: Pull latest changes from main
        run: git pull origin main --rebase

      - name: Stash changes
        run: git stash --include-untracked

      - name: Bump version automatically
        id: version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          # Bump version (patch, minor, or prerelease)
          NEW_VERSION=$(npm version patch -m "Bump version to %s")
          echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Apply stashed changes
        run: git stash pop

      - name: Resolve merge conflicts (if any)
        run: git merge --abort || echo "No merge conflicts"

      - name: Commit and push version bump
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git add package.json package-lock.json
          git commit -m "Release ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin main --tags
          
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: "New release of Base64Plus!"
          draft: false
          prerelease: false
          files: |
            dist/base64Plus.umd.js
            dist/base64Plus.esm.js
            dist/base64Plus.iife.js