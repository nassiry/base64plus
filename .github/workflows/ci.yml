jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Reset Git working directory
        run: |
          git reset --hard
          git clean -fdx

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  release:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"
          always-auth: true

      - name: Reset Git working directory
        run: |
          git reset --hard
          git clean -fdx

      - name: Install dependencies
        run: npm ci

      - name: Verify Rollup installation
        run: npx rollup --version

      - name: Build project
        run: npm run build

      - name: Determine version bump type
        id: version-bump
        run: |
          BUMP_TYPE="patch"

          if git log -1 --pretty=%B | grep -q "\[major\]"; then
            BUMP_TYPE="major"
          elif git log -1 --pretty=%B | grep -q "\[minor\]"; then
            BUMP_TYPE="minor"
          fi

          echo "BUMP_TYPE=${BUMP_TYPE}" >> $GITHUB_ENV

      - name: Bump version and update Changelog
        id: version
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          git reset --hard
          git clean -fdx

          npm install -g standard-version

          standard-version --commit-all --release-as ${{ env.BUMP_TYPE }}

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV

          git push --follow-tags origin main

      - name: Generate release body from Changelog
        id: generate-release-body
        run: |
          RELEASE_BODY=$(awk '/## \[/{if (NR!=1) exit} {print}' CHANGELOG.md | tail -n +2)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
          files: |
            dist/base64Plus.umd.js
            dist/base64Plus.esm.js
            dist/base64Plus.iife.js